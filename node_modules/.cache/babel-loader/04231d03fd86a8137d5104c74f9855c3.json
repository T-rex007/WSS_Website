{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { projectStorage, projectFirestore } from '../firebase/config';\nimport React from 'react';\n\nconst useStorage = file => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n  useEffect(() => {\n    const storageRef = projectStorage.ref(file.name);\n    storageRef.put(file).on('state_changed', snap => {\n      let percentage = snap.bytesTransferred / snap.totalBytes * 100;\n      setProgress(percentage);\n    }, err => {\n      setError(err);\n    }, async () => {\n      const url = await storageRef.getDownloadURL();\n      setUrl(url);\n    });\n  }, [file]);\n  return {\n    progress,\n    url,\n    error\n  };\n};\n\nexport default useStorage;","map":{"version":3,"sources":["/home/trex/workspace/react101/firegram/src/hooks/useStorage.js"],"names":["useState","useEffect","projectStorage","projectFirestore","React","useStorage","file","progress","setProgress","error","setError","url","setUrl","storageRef","ref","name","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadURL"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,oBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,UAAU,GAAIC,IAAD,IAAU;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACS,KAAD,EAAOC,QAAP,IAAmBV,QAAQ,CAAC,IAAD,CAAjC;AACA,QAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,IAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACX,UAAMY,UAAU,GAAGX,cAAc,CAACY,GAAf,CAAmBR,IAAI,CAACS,IAAxB,CAAnB;AAEAF,IAAAA,UAAU,CAACG,GAAX,CAAeV,IAAf,EAAqBW,EAArB,CAAwB,eAAxB,EAA0CC,IAAD,IAAU;AAC/C,UAAIC,UAAU,GAAID,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACG,UAA9B,GAA4C,GAA7D;AACAb,MAAAA,WAAW,CAACW,UAAD,CAAX;AACH,KAHD,EAGIG,GAAD,IAAS;AACRZ,MAAAA,QAAQ,CAACY,GAAD,CAAR;AAEH,KAND,EAMG,YAAY;AACX,YAAMX,GAAG,GAAG,MAAME,UAAU,CAACU,cAAX,EAAlB;AACAX,MAAAA,MAAM,CAACD,GAAD,CAAN;AACH,KATD;AAUH,GAbQ,EAaN,CAACL,IAAD,CAbM,CAAT;AAeA,SAAO;AAACC,IAAAA,QAAD;AAAWI,IAAAA,GAAX;AAAgBF,IAAAA;AAAhB,GAAP;AACH,CArBD;;AAuBA,eAAeJ,UAAf","sourcesContent":["import {useState, useEffect} from 'react';\nimport { projectStorage, projectFirestore } from '../firebase/config';\nimport React from 'react';\nconst useStorage = (file) => {\n    const [progress, setProgress] = useState(0);\n    const [error,setError] = useState(null);\n    const [url, setUrl] = useState(null);\n\n    useEffect(() =>{\n        const storageRef = projectStorage.ref(file.name);\n        \n        storageRef.put(file).on('state_changed', (snap) => {\n            let percentage = (snap.bytesTransferred / snap.totalBytes ) *100;\n            setProgress(percentage);\n        }, (err) => {\n            setError(err);\n            \n        }, async () => {\n            const url = await storageRef.getDownloadURL();\n            setUrl(url);\n        })\n    }, [file]);\n\n    return {progress, url, error}\n}\n\nexport default useStorage;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}