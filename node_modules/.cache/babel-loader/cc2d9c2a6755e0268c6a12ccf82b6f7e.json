{"ast":null,"code":"var _jsxFileName = \"/home/trex/workspace/react101/firegram/src/comps/UploadForm.js\";\nimport React from 'react';\n\nconst UploadForm = () => {\n  const [file, setFile] = React.useState(null);\n  const [error, setError] = React.useState(null);\n  const types = ['image/png', 'image/jpeg'];\n\n  const changeHandler = e => {\n    console.log('changed');\n    let selected = e.target.files[0];\n    console.log(selected); // Do we have a File\n\n    if (selected && types.includes(selected.type)) {\n      setFile(selected);\n      setError(' ');\n    } else {\n      setFile(null);\n      setError(\"Please Select an Image file (jpeg or png)\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"output\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 28\n    }\n  }, error), file && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 27\n    }\n  }, file.name, \" \"), file && /*#__PURE__*/React.createElement(ProgressBar, {\n    file: file,\n    setFile: setFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 27\n    }\n  })));\n};\n\nexport default UploadForm;","map":{"version":3,"sources":["/home/trex/workspace/react101/firegram/src/comps/UploadForm.js"],"names":["React","UploadForm","file","setFile","useState","error","setError","types","changeHandler","e","console","log","selected","target","files","includes","type","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,KAAK,CAACI,QAAN,CAAe,IAAf,CAAxB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,KAAK,CAACI,QAAN,CAAe,IAAf,CAA1B;AAEA,QAAMG,KAAK,GAAG,CAAE,WAAF,EAAe,YAAf,CAAd;;AAEA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,QAAIC,QAAQ,GAAGH,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,CAAf;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,EAHyB,CAKzB;;AACA,QAAGA,QAAQ,IAAIL,KAAK,CAACQ,QAAN,CAAeH,QAAQ,CAACI,IAAxB,CAAf,EAA6C;AACzCb,MAAAA,OAAO,CAACS,QAAD,CAAP;AACAN,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACH,KAHD,MAGO;AACHH,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAG,MAAAA,QAAQ,CAAC,2CAAD,CAAR;AACH;AACJ,GAbD;;AAcA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAIE,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMH,KAAK,iBAAI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBA,KAAzB,CADf,EAEMH,IAAI,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,IAAI,CAACe,IAAZ,MAFd,EAGMf,IAAI,iBAAI,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEA,IAAnB;AAAyB,IAAA,OAAO,EAAEC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHd,CAFJ,CADJ;AAUH,CA9BD;;AA+BA,eAAeF,UAAf","sourcesContent":["import React from 'react';\nconst UploadForm = () => {\n    const [file, setFile] = React.useState(null);\n    const [error, setError] = React.useState(null);\n    \n    const types = [ 'image/png', 'image/jpeg'];\n\n    const changeHandler = (e) => {\n        console.log('changed');\n        let selected = e.target.files[0];\n        console.log(selected);\n\n        // Do we have a File\n        if(selected && types.includes(selected.type)){\n            setFile(selected);\n            setError(' ');\n        } else {\n            setFile(null);\n            setError(\"Please Select an Image file (jpeg or png)\");\n        }\n    }\n    return(\n        <form>\n            <input type=\"file\" onChange = {changeHandler}/>\n            <div className=\"output\">\n                { error && <div className=\"error\">{ error }</div>}\n                { file && <div>{ file.name } </div> }\n                { file && <ProgressBar file={file} setFile={setFile} />}\n            </div>\n        </form>\n    )\n}\nexport default UploadForm;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}